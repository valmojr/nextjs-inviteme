generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id          String   @id @unique @default(cuid())
  discordId   String?  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  username    String   @unique
  displayName String?
  password    String?
  avatar      String?
  email       String?  @unique
  bannerColor String?
  ownedEvents Event[]  @relation("UserToOwnedEvents")
  roles       Role[]
  houses      House[]  @relation("HouseToUser")
  events      Event[]  @relation("UserToAttendedEvents")
}

model Role {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  userId    String?
  groupID   String?
  group     Group?   @relation(fields: [groupID], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
}

model Group {
  id                   String   @id @unique @default(cuid())
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  name                 String
  roleIDs              String[]
  fatherGroupID        String?
  eventID              String
  isFatherGroupOfEvent Event?   @relation("fatherGroupToEvent")
  event                Event    @relation("GroupsToEvent", fields: [eventID], references: [id])
  fatherGroup          Group?   @relation("GroupToFatherGroup", fields: [fatherGroupID], references: [id])
  childGroups          Group[]  @relation("GroupToFatherGroup")
  roles                Role[]
}

model Event {
  id          String    @id @unique @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  startDate   DateTime
  endDate     DateTime?
  name        String
  thumbnail   String?
  mainGroupID String?   @unique
  ownerID     String
  location    String?
  description String?
  mainGroup   Group?    @relation("fatherGroupToEvent", fields: [mainGroupID], references: [id])
  owner       User      @relation("UserToOwnedEvents", fields: [ownerID], references: [id])
  groups      Group[]   @relation("GroupsToEvent")
  House       House[]   @relation("EventToHouse")
  users       User[]    @relation("UserToAttendedEvents")
}

model House {
  id        String   @id @unique @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  avatar    String?
  events    Event[]  @relation("EventToHouse")
  users     User[]   @relation("HouseToUser")
}
